trg_Book.allInstances->forAll(b | b.articles_Article_Book->exists(a | a.title = 'BibTeXML to DocBook'))
trg_Article.allInstances->forAll(a | 	a.sections_1_Article_Sect1->size() >= 4 and 	a.sections_1_Article_Sect1->at(3).title = 'References List' and 	a.sections_1_Article_Sect1->at(2).title = 'Authors List' and 	a.sections_1_Article_Sect1->at(4).title = 'Titles List' and	a.sections_1_Article_Sect1->at(1).title = 'Journals List')
src_Author.allInstances->forAll(au | trg_Article.allInstances()->exists(a | 	a.sections_1_Article_Sect1->at(2).paras_Para_Section->exists(p | p.content = au.author ))) 
src_Author.allInstances->forAll(a | trg_Para.allInstances->exists(p |	p.content = a.author and	p.section_Para_Section.title = 'Authors List'))
src_Booklet.allInstances->forAll(b |	trg_Para.allInstances->exists(p |		p.content = '['.concat(b.id).concat('] Booklet ').concat(b.year) and		p.section_Para_Section.title = 'References List'))
src_Unpublished.allInstances->forAll(b |	trg_Para.allInstances->exists(p |		p.content = '['.concat(b.id).concat('] Unpublished ').concat(b.title).concat(			b.authors_Author_AuthoredEntry->iterate(e; str : String = '' | str + e.author)			).concat(b.note) and		p.section_Para_Section.title = 'References List')	and	trg_Para.allInstances->exists(p |		p.content = b.title and		p.section_Para_Section.title = 'Titles List'))
src_MasterThesis.allInstances->forAll(b |	trg_Para.allInstances->exists(p |		p.content = '['.concat(b.id).concat('] MasterThesis ').concat(b.title).concat(			b.authors_Author_AuthoredEntry->iterate(e; str : String = '' | str + e.author)			).concat(b.year).concat(b.school) and		p.section_Para_Section.title = 'References List')	and	trg_Para.allInstances->exists(p |		p.content = b.title and		p.section_Para_Section.title = 'Titles List'))
src_PhDThesis.allInstances->forAll(b |	trg_Para.allInstances->exists(p |	p.content = '['.concat(b.id).concat('] PhDThesis ').concat(b.title).concat(			b.authors_Author_AuthoredEntry->iterate(e; str : String = '' | str + e.author)			).concat(b.year).concat(b.school) and		p.section_Para_Section.title = 'References List')	and	trg_Para.allInstances->exists(p |		p.content = b.title and		p.section_Para_Section.title = 'Titles List'))
src_Book.allInstances->forAll(b |	trg_Para.allInstances->exists(p |		p.content = '['.concat(b.id).concat('] Book ').concat(b.title).concat(			b.authors_Author_AuthoredEntry->iterate(e; str : String = '' | str + e.author)			).concat(b.year).concat(b.publisher) and		p.section_Para_Section.title = 'References List')	and	trg_Para.allInstances->exists(p |		p.content = b.title and		p.section_Para_Section.title = 'Titles List'))
src_InBook.allInstances->forAll(b |	trg_Para.allInstances->exists(p |		p.content = '['.concat(b.id).concat('] InBook ').concat(b.title).concat(			b.authors_Author_AuthoredEntry->iterate(e; str : String = '' | str + e.author)			).concat(b.year).concat(b.chapter.toString()) and		p.section_Para_Section.title = 'References List')	and	trg_Para.allInstances->exists(p |		p.content = b.title and		p.section_Para_Section.title = 'Titles List'))
src_TechReport.allInstances->forAll(b |	trg_Para.allInstances->exists(p |		p.content = '['.concat(b.id).concat('] TechReport ').concat(b.title).concat(			b.authors_Author_AuthoredEntry->iterate(e; str : String = '' | str + e.author)			).concat(b.year) and		p.section_Para_Section.title = 'References List')	and	trg_Para.allInstances->exists(p |		p.content = b.title and		p.section_Para_Section.title = 'Titles List'))
src_Manual.allInstances->forAll(b |	trg_Para.allInstances->exists(p |		p.content = '['.concat(b.id).concat('] Manual ').concat(b.title) and		p.section_Para_Section.title = 'References List')	and	trg_Para.allInstances->exists(p |		p.content = b.title and		p.section_Para_Section.title = 'Titles List'))
src_Proceedings.allInstances->forAll(b |	trg_Para.allInstances->exists(p |		p.content = '['.concat(b.id).concat('] Proceedings ').concat(b.title).concat(b.year) and		p.section_Para_Section.title = 'References List')	and	trg_Para.allInstances->exists(p |		p.content = b.title and		p.section_Para_Section.title = 'Titles List'))
src_InProceedings.allInstances->forAll(b |	trg_Para.allInstances->exists(p |		p.content = '['.concat(b.id).concat('] InProceedings ').concat(b.title).concat(			b.authors_Author_AuthoredEntry->iterate(e; str : String = '' | str + e.author)			).concat(b.year).concat(b.booktitle))	and	trg_Para.allInstances->exists(p |		p.content = b.title and		p.section_Para_Section.title = 'Titles List'))
src_InCollection.allInstances->forAll(b |	trg_Para.allInstances->exists(p |		p.content = '['.concat(b.id).concat('] InCollection ').concat(b.title).concat(			b.authors_Author_AuthoredEntry->iterate(e; str : String = '' | str + e.author)			).concat(b.year).concat(b.booktitle))	and	trg_Para.allInstances->exists(p |		p.content = b.title and		p.section_Para_Section.title = 'Titles List'))
src_Article.allInstances->forAll(b |	trg_Para.allInstances->exists(p |		p.content = '['.concat(b.id).concat('] Article ').concat(b.title).concat(			b.authors_Author_AuthoredEntry->iterate(e; str : String = '' | str + e.author)			).concat(b.year).concat(b.journal))	and	trg_Para.allInstances->exists(p |		p.content = b.title and		p.section_Para_Section.title = 'Titles List')	and	trg_Para.allInstances->exists(p |		p.content = b.journal and		p.section_Para_Section.title = 'Journals List'))