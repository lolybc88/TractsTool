src_Package.allInstances->forAll(p | trg_ERModel.allInstances->one(e | p.name = e.name))
src_Package.allInstances->forAll(p | trg_ERModel.allInstances->one(e | p.name = e.name and p.ownedElements_Class_Package->forAll(class | e.entities_ERModel_EntityType->one(entity | entity.name = class.name))))
src_Class.allInstances->forAll(class | trg_EntityType.allInstances->one(entity | entity.name = class.name and class.ownedProperty_Class_Property->forAll(prop | entity.features_EntityType_Feature->forAll(f | f.name = prop.name))))
src_NamedElement.allInstances-> size() = trg_Element.allInstances->size()
src_Package.allInstances->size() = trg_ERModel.allInstances->size()
src_Class.allInstances->size() = trg_EntityType.allInstances->size()
src_Property.allInstances->size() = trg_Feature.allInstances->size()
src_Property.allInstances->forAll(prop | prop.primitiveType<>'' and (not prop.primitiveType.oclIsUndefined()) implies trg_Feature.allInstances-> select(f|f.oclIsTypeOf(trg_Attribute)) -> one(f | f.name = prop.name))
src_Property.allInstances->forAll(prop | prop.complexType_Class_Property <> null implies trg_Feature.allInstances-> select(f|f.oclIsTypeOf(trg_Reference)) -> one(f | f.name = prop.name and prop.isContainment implies f.oclIsTypeOf(trg_WeakReference)))
src_Property.allInstances->forAll(prop | prop.complexType_Class_Property <> null implies trg_Feature.allInstances-> select(f|f.oclIsTypeOf(trg_Reference)) -> one(ref | ref.name = prop.name and not prop.isContainment implies ref.oclIsTypeOf(trg_StrongReference)))